# age = int(input('Введите свой возраст: '))
# print('Ваш возраст: ', age)
#
# if age >= 18:
#     print('Вы можете войти в магазин!')
#     if age == 18:
#         print('Вам 18, мы вам не рекомендуем посещение данного места')
# elif age <= 12:
#     print('Вам запрещено посещение данного заведения')
# elif age <= 16:
#     print('Вам разрешено посещение этого места по приглашению')
# else:
#     print('Вы не имеете доступа в этот магазин')
#
"""
Практика
"""
import string

# num = int(input('Введите число: '))
# print(f'Число {num} четное') if num % 2 == 0 \
#     else print(f'Число {num} нечетное')

# num1 = 5
# num2 = 4
# print(True) if num1 > num2 else print(False)
# print(True) if (num1 + num2) % 2 == 0 else print(False)

"""
Задача 1
Николай написал функцию is_alive(health), которая проверяет здоровье
персонажа в игре. Если оно равно или меньше нуля, 
то функция возвращает False, в противном случае True. К
сожалению, функция не работает, так как ученик допустил в ней ряд 
ошибок. Исправьте их и проверьте работоспособность программы 
(в качестве аргумента всегда передается число).
"""
# def is_alive(health):
#     if health <= 0:
#         return False
#     else:
#         return True
#
# print(is_alive(-5))

"""
Составьте функцию season_events(number_of_month), 
которая принимает номер месяца вашего рождения и в
зависимости от сезона печатает на выходе следующее:
«Вы родились в <НАЗВАНИЕ_МЕСЯЦА>. <ОПИСАНИЕ_СОБЫТИЙ>».
В качестве ОПИСАНИЯ_СОБЫТИЙ будет характеристика сезона: 
- для зимы «За окном падал белый снег»,
- для весны «Птицы пели прекрасные песни»,
- для лета «Солнце светило ярче чем когда-либо»,
- для осени «Урожай был невероятным».

Важно учесть, что пользователи могут ввести любой тип данных в качестве
аргумента (не попадитесь на этом и предупредите о том,
что «Требуется ввести реальный номер месяца»).
"""
# month = {1: 'Январе', 2: 'Феврале',
#          3: 'Марте', 4: 'Апреле',
#          5: 'Мае', 6: 'Июне', 7: 'Июле',
#          8: 'Августе', 9: 'Сентябре', 10: 'Октябре',
#          11: 'Ноябре', 12: 'Декабре'
#          }


# def season_events(number_of_month):
#     if not isinstance(number_of_month, int) or not 1 <= number_of_month <= 12:
#         print('Требуется ввести реальный номер месяца')
#         return
#     if number_of_month in range(3, 6):
#         print(f'Вы родились в {month[number_of_month]} птицы пели прекрасные песни')
#     elif number_of_month in range(6, 9):
#         print(f'Вы родились в {month[number_of_month]} солнце светило ярче чем когда-либо')
#     elif number_of_month in range(9, 12):
#         print(f'Вы родились в {month[number_of_month]} урожай был невероятным')
#     else:
#         print(f'Вы родились в {month[number_of_month]} за окном падал белый снег')
#
#
# season_events('fds')
# season_events(7)
# season_events(10)
# season_events(5)

"""
Анатолию в последний месяц удача улыбалась очень плохо. 
У него 3 раза взломали пароль. 
Вот он и задумался над тем, что неправильно подходит к вопросу 
составления паролей.
Чтобы не напрягаться больше и опять не попасть впросак, молодой
человек решил написать функцию на Python, 
которая будет проверять его пароль на надежность.
Требования к паролю у Анатолия следующие (он внимательно изучил 
рекомендации знатоков):
1) Длина – 8 символов (если меньше – то проще взломать, а если длиннее
 – то сложно запомнить)
2) В пароле должны быть заглавные буквы, строчные символы, 
числа и специальные знаки (из перечня «*-#»; другие спецсимволы 
недопустимы, так как Анатолий их не может запомнить).
Помогите парню составить функцию check_pass (pswd), 
которая проверит пароль на соответствие требованиям. 
В случае верного пароля выведется на печать «Пароль идеален», 
а в остальных случаях будут перечислены все ошибки, 
которые Анатолий допустил (для представления перечня ошибок заведите
переменную err в виде словаря).
"""


# def check_pass(pswd):
#     err = {
#         'Длина': 'Пароль не содержит 8 символов',
#         'Заглавные буквы': 'В пароле должны быть заглавные буквы',
#         'Строчные буквы': 'Пароль должен содержать строчный буквы',
#         'Цифры': 'Пароль должен содержать цифры',
#         'Символы': 'Пароль должен содержать символы * - #',
#         'Недопустимые символы': 'В пароле содержатся недопустимые символы'
#         }
#     if len(pswd) == 8:
#         err.pop('Длина')
#     if pswd.upper() != pswd:
#         err.pop('Заглавные буквы')
#     if pswd.lower() != pswd:
#         err.pop('Строчные буквы')
#     if any(map(str.isdigit, pswd)):
#         err.pop('Цифры')
#     if ('*' in pswd) or ('-' in pswd) or ('#' in pswd):
#         err.pop('Символы')
#
#     allowed_sym = string.ascii_uppercase + string.ascii_lowercase + string.digits + '*-#'
#     if (set(pswd) - set(allowed_sym)) == set():
#         err.pop('Недопустимые символы')
#     if len(err) == 0:
#         print('Пароль идеален')
#     else:
#         print(*err.values(), sep='; ')
#
# check_pass('8Yy#*rrT')
# check_pass('@#@@u')
# check_pass('Tr56#2@@')
# check_pass('qwerty11')
# check_pass('11qweQ-s')










